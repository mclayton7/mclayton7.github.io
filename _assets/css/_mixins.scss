/******************************************************************
Site Name:
Author:

Stylesheet: Mixins & Constants Stylesheet

This is where you can take advantage of Sass' great features:
Mixins & Constants. I won't go in-depth on how they work exactly,
there are a few articles below that will help do that. What I will
tell you is that this will help speed up simple changes like
changing a color or adding CSS3 techniques gradients.

A WORD OF WARNING: It's very easy to overdo it here. Be careful and
remember less is more.

******************************************************************/

// http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
.image-replacement {
        text-indent: 100%;
        white-space: nowrap;
        overflow: hidden;
}

// text alignment
.text-left   { text-align: left; }
.text-center { text-align: center; }
.text-right  { text-align: right; }



/*********************
TRANSITION
*********************/

/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

@mixin transition($transition...) {
        // defining prefixes so we can use them in mixins below
        $prefixes:      ("-webkit",  "");
  @each $prefix in $prefixes {
    #{$prefix}-transition: $transition;
  }

  transition: $transition;
}

/*********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdo it.
*********************/

/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
        background-color: $to;
        background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
        background-image: -webkit-linear-gradient(top, $from, $to);
        background-image: -moz-linear-gradient(top, $from, $to);
        background-image: -o-linear-gradient(top, $from, $to);
        background-image: linear-gradient(to bottom, $from, $to);
}

/*********************
BOX SIZING
*********************/

/* @include box-sizing(border-box); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-sizing($type: border-box) {
        -webkit-box-sizing: $type;
        -moz-box-sizing:    $type;
        -ms-box-sizing:     $type;
        box-sizing:         $type;
}

// Box Shadow Mixin from: https://gist.github.com/garyharan/957284
@mixin box-shadow($top, $left, $blur, $color) {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
}

// Border Radius from: http://nicksergeant.com/a-collection-of-scss-mixins-ive-curated-over-time/
@mixin border-radius($radius: 5px) {
    -webkit-background-clip: padding-box;
    -webkit-border-radius: $radius;
    -moz-background-clip: padding-box;
    -moz-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;
}
